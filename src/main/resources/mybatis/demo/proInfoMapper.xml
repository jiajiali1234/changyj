<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.boot.model.ProInfoMapper">
    <select id="list" parameterType="java.util.Map" resultType="com.boot.siluboot.demo.model.ProInfo">
        <!--// databaseId="oracle" 根据不同的数据库类型，myBatis自动寻找对应数据库类型的SQL，
                如果不写databaseId，则不会按照数据库类型匹配；
                databaseId的可选值有：sqlserver/db2/oracle/mysql  //-->
        SELECT
        I.PRO_ID,
        I.PRO_NAME,
        I.CODE_KIND,
        C.DICT_NAME,
        I.CONTRACT_NAME,
        I.SIGN_DATE,
        I.PRO_STATUS,
        I.MANAGER_ID,
        I.MANAGER,
        I.PRO_FEE,
        I.DEPT_MANAGER,
        I.DEPT_NAME,
        I.PRO_DESC
        FROM T_PRO_INFO I
        LEFT JOIN T_CODE_PRO C ON I.CODE_KIND = C.DICT_ID
        WHERE C.DICT_TYPE='PRO.TYPE'
        <if test='proName!=null and proName!="" '>
            <bind name="proNameLike" value="'%'+@ths.boot.util.SqlUtils@replaceWildCards(proName)+'%'"/>
            AND I.PRO_NAME LIKE #{proNameLike ,jdbcType=VARCHAR}
        </if>
        <if test='codeKind!=null and codeKind!="" '>
            AND I.CODE_KIND =#{codeKind,jdbcType=VARCHAR}
        </if>
        <if test='startDate!=null  and startDate!="" '>
            AND I.SIGN_DATE &gt;= #{startDate,jdbcType=TIMESTAMP}
        </if>
        <if test='END_DATE!=null  and END_DATE!="" '>
            AND I.SIGN_DATE &lt;= TO_DATE(#{endDate,jdbcType=TIMESTAMP }
        </if>
    </select>

    <select id="get" parameterType="java.lang.String" resultType="com.boot.siluboot.demo.model.ProInfo">
        SELECT I.PRO_ID,
               I.PRO_NAME,
               I.CODE_KIND,
               C.DICT_NAME,
               I.CONTRACT_NAME,
               I.SIGN_DATE,
               I.PRO_STATUS,
               I.MANAGER_ID,
               I.MANAGER,
               I.PRO_FEE,
               I.DEPT_MANAGER,
               I.DEPT_NAME,
               I.PRO_DESC,
               I.DEPT_ID,
               I.DEPT_MANAGER_ID
        FROM T_PRO_INFO I
        LEFT JOIN T_CODE_PRO C ON I.CODE_KIND = C.DICT_ID
        WHERE I.PRO_ID = #{proId, jdbcType=VARCHAR}
	</select>

    <insert id="insert" parameterType="com.boot.siluboot.demo.model.ProInfo">
        INSERT INTO T_PRO_INFO(
	        PRO_ID, 
	        PRO_NAME, 
	        CODE_KIND,                               
	        CONTRACT_NAME, 
	        SIGN_DATE, 
	        PRO_STATUS,
	        MANAGER_ID, 
	        MANAGER, 
	        PRO_FEE,
	        DEPT_MANAGER, 
	        DEPT_NAME, 
	        PRO_DESC,
	        CREATE_DATE, 
	        MODIFY_DATE, 
	        CREATE_USER,
	        MODIFY_USER, 
	        DEPT_ID, 
	        DEPT_MANAGER_ID
	    )VALUES (
        	#{proId, jdbcType=VARCHAR}, 
        	#{proName, jdbcType=VARCHAR}, 
        	#{codeKind, jdbcType=VARCHAR},
        	#{contractName, jdbcType=VARCHAR}, 
        	#{signDate, jdbcType=DATE}, 
        	#{proStatus, jdbcType=INTEGER},
            #{managerId, jdbcType=VARCHAR}, 
            #{manager, jdbcType=VARCHAR}, 
            #{proFee, jdbcType=DECIMAL},
            #{deptManager, jdbcType=VARCHAR}, 
            #{deptName, jdbcType=VARCHAR}, 
            #{proDesc, jdbcType=VARCHAR},
            #{createDate, jdbcType=VARCHAR}, 
            #{modifyDate, jdbcType=VARCHAR}, 
            #{createUser, jdbcType=VARCHAR},
            #{modifyUser, jdbcType=VARCHAR}, 
            #{deptId, jdbcType=VARCHAR}, 
            #{deptManagerId, jdbcType=VARCHAR}
        )
	</insert>

    <delete id="delete">
        DELETE FROM T_PRO_INFO WHERE PRO_ID IN
        <!-- 如果是数组，collection="array",如果是List，collection="list" -->
        <foreach collection="array" item="proIds" index="index" open="(" separator="," close=")">
            #{proIds,jdbcType=VARCHAR}
        </foreach>
    </delete>

    <delete id="deleteOne">
        DELETE
        FROM T_PRO_INFO
        WHERE PRO_ID = #{proId, jdbcType=VARCHAR}
    </delete>

    <update id="update" parameterType="java.util.Map">
        UPDATE T_PRO_INFO
        SET PRO_NAME=#{proName, jdbcType=VARCHAR},
            CODE_KIND=#{codeKind, jdbcType=VARCHAR},
            CONTRACT_NAME=#{contractName, jdbcType=VARCHAR},
            SIGN_DATE=#{signDate, jdbcType=DATE},
            PRO_STATUS=#{proStatus, jdbcType=INTEGER},
            MANAGER_ID=#{managerId, jdbcType=VARCHAR},
            MANAGER=#{manager, jdbcType=VARCHAR},
            PRO_FEE=#{proFee, jdbcType=DECIMAL},
            DEPT_MANAGER=#{deptManager, jdbcType=VARCHAR},
            DEPT_NAME=#{deptName, jdbcType=VARCHAR},
            PRO_DESC=#{proDesc, jdbcType=VARCHAR},
            DEPT_ID=#{deptId, jdbcType=VARCHAR},
            DEPT_MANAGER_ID=#{deptManager_id, jdbcType=VARCHAR},
            MODIFY_DATE=#{modifyDate, jdbcType=VARCHAR },
            MODIFY_USER=#{modifyUser, jdbcType=VARCHAR}
        WHERE PRO_ID = #{proId, jdbcType=VARCHAR}
    </update>

</mapper>

